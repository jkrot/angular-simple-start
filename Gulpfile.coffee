
gulp  = require 'gulp'
gutil = require 'gulp-util'
run   = require 'run-sequence'
semver = require 'semver-utils'

###
  DEFAULT TASK
###
gulp.task 'default', (done) ->
  run(
    'clean'
    'build'
    'copy:bin'
    'server'
    [
      'server:open'
      'test:unit:continuous'
      'watch'
    ]
    done
  )

gulp.task 'watch', (done) ->

  server = livereload()

  gulp.watch urls.coffee, ['build:src']
    .on 'change', (file) -> server.changed file.path

  gulp.watch [
    'src/**/*.scss'
  ]
    .on 'change', (file) ->
      run(
        [
          'build:sass'
        ]
        'css:testing'
        -> server.changed file.path
      )

  gulp.watch [
    'src/**/*.coffee'
    '!src/**/*.jquery.coffee'
    '!src/**/*.spec.coffee'
    '!src/**/*.ui.coffee'
    'src/**/*.html'
    '!src/**/examples/*.html'
  ]
    .on 'change', (file) ->
      run(
        'build:src'
        -> server.changed file.path
      )

  gulp.watch [
    'src/**/*.spec.coffee'
  ], ['test:unit:compile']
    .on 'change', (file) -> server.changed file.path


###
#    Server & Livereload
###

connect    = require 'gulp-connect'
open       = require 'open'
path       = require 'path'
livereload = require 'gulp-livereload'

SERVER_PORT     = process.env.PORT or 8000
LIVERELOAD_PORT = 35729

gulp.task 'server', ->
  express = require 'express'
  app = express()

  app.use '/', express.static path.join __dirname, 'dist/site/app'
    .use '/cui', express.static path.join __dirname, 'bin'
    .use '/vendor', express.static path.join __dirname, 'vendor'
    .listen SERVER_PORT

gulp.task 'server:open', ->
  open "http://localhost:#{SERVER_PORT}"

###
#    Build Process
###

# Utilities/commonly used
concat        = require 'gulp-concat'
clean         = require 'gulp-clean'

# HTML templates
htmlmin       = require 'gulp-htmlmin'
templateCache = require 'gulp-angular-templatecache'

# Coffeescript/Javascript
coffee        = require 'gulp-coffee'
uglify        = require 'gulp-uglify'
annotate      = require 'gulp-ng-annotate'
rename        = require 'gulp-rename'
header        = require 'gulp-header'

# SASS/CSS
sass          = require 'gulp-sass'
csso          = require 'gulp-csso'


###
  URLS TO LOCATIONS
###

vendor = [
  'vendor/angular/angular.js'
  'vendor/angular-route/angular-route.js'
  'vendor/angular-animate/angular-animate.js'
  'vendor/angular-touch/angular-touch.js'
]
vendor_min = [
  'vendor/angular/angular.min.js'
  'vendor/angular-route/angular-route.min.js'
  'vendor/angular-animate/angular-animate.min.js'
  'vendor/angular-touch/angular-touch.min.js'
]
urls =
  src:
    sass: [ 
      'src/base.scss'
      'src/*/*/*.scss'
    ]

###
  BUILD UTILITIES
###

gulp.task 'build', (done) ->
  run(
    'build:src:index'
    'build:src'
    'build:sass'
    'build:vendor'
    done
  )


# Standalone: Task must be explicitly called.
gulp.task 'clean', ->
  gulp.src [
    'coverage/'
    '.tmp'
    'server/examples'
    'bin'
    'dist'
  ], read: no
    .pipe clean()

###
  HTML --> $templateCache
###

appTemplates = ->
  gulp.src [
    'src/**/*.html'
  ]

    .pipe rename dirname: ''

    .pipe htmlmin
      collapseWhitespace: yes
      removeComments: yes
      collapseBooleanAttributes: yes
      removeAttributeQuotes: yes
      caseSensitive: yes

    .pipe templateCache 'app.tmpl.js',
      root: '__cui'
      standalone: yes
      module: 'app.templates'

###
  COFFEESCRIPT (SRC)
###

appSource = ->
  gulp.src [
    'src/index.coffee'
    'src/**/*.coffee'
    '!src/**/*.jquery.coffee'
    '!src/**/*.spec.coffee'
    '!src/**/*.ui.coffee'
  ]

    .pipe concat 'appsrc.js'
    .pipe coffee().on 'error', gutil.log



###
  appTemplates AND appSource

  SRC Compilation
###


VENDOR_HEADER = ""

gulp.task 'build:src', ->
  require('event-stream')
    .merge appTemplates(), appSource()

    .pipe concat 'app.js'

    .pipe header HEADER

    .pipe gulp.dest 'bin/js'

    .pipe gulp.dest '.tmp/bin/js'

    .pipe annotate
      single_quotes: yes
      remove: yes
      add: yes

    .pipe uglify mangle: off
    .pipe header HEADER
    .pipe rename suffix: '.min'
    .pipe gulp.dest 'bin/js'

###
  Build the index files, which register the modules for Angular.
###

fs     = require 'fs'
wrench = require 'wrench'

gulp.task 'build:src:index', (done) ->

  regex = /[\/\\](\w+)[\/\\]\w+\.coffee$/
  arr = []
  files = wrench.readdirSyncRecursive 'src'
  files = files.filter (fileName) ->
    regex.test fileName

  files.forEach (fullPath) ->
    match = regex.exec fullPath
    arr.push "app.#{match[1]}.#{match[2]}" if match

    out = """
          # This file is generated by `gulp build:src:index`, do not edit yourself.
          window.__app = #{__app}

          app = angular.module 'app', #{JSON.stringify(arr, null, 2)}

          angular.module('app.base', ['app.templates'])
            .value('baseTemplatePath', '__app/')
          """

    fs.writeFile 'src/index.coffee', out,
      (err) ->
        if err then throw new Error 'Unable to write index.coffee. Check your write permissions to `src/`'
        done()


gulp.task 'copy:bin', ->
  checkForSite ->
    gulp.src 'bin/**/*'
      .pipe gulp.dest 'dist/site/app'


###
  SASS
###
base64 = require 'gulp-base64'

gulp.task 'build:sass', ->
  gulp.src urls.src.sass
    .pipe sass
      includePaths: [
        require('node-bourbon').includePaths
        'vendor/modularized-normalize-scss/'
        'src/'
      ]
      onError: (err) ->
        gutil.log gutil.colors.red err
        gutil.beep()

    .pipe concat 'app.css'

    .pipe base64
      baseDir: 'src'
      extensions: ['png', 'jpg']

    .pipe header HEADER

    # app.css
    .pipe gulp.dest 'bin/css'

    # app.min.css
    .pipe csso()
    .pipe rename suffix: '.min'
    .pipe gulp.dest 'bin/css'



###
  VENDOR
###
gulp.task 'build:vendor', [
  'build:vendor:full'
  'build:vendor:min'
]

gulp.task 'build:vendor:full', ->
  gulp.src cui_vendor
    .pipe concat 'vendor.js'
    .pipe header VENDOR_HEADER
    .pipe gulp.dest 'bin/js'
    .pipe gulp.dest '.tmp/bin/js'

gulp.task 'build:vendor:min', ->
  gulp.src cui_vendor_min
    .pipe uglify mangle: off
    .pipe concat 'vendor.min.js'
    .pipe header VENDOR_HEADER
    .pipe gulp.dest 'bin/js'

###
  UNIT TESTS
###
exec = require('child_process').exec

gulp.task 'test:unit', ['test:unit:compile', 'build:src'], ->
  karma = require('karma').server

  karma.start
    configFile: path.resolve __dirname, 'karma.conf.coffee'
    singleRun: yes
    autoWatch: no

gulp.task 'test:unit:continuous', ['test:unit:compile'], ->
  karma = require('karma').server

  karma.start
    configFile: path.resolve __dirname, 'karma.conf.coffee'
    singleRun: no
    autoWatch: yes